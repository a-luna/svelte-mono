/* Write your global styles here, in PostCSS syntax */
/* ! tailwindcss v3.3.1 | MIT License | https://tailwindcss.com */
/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/
*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}
::before,
::after {
  --tw-content: '';
}
/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/
html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
}
/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/
body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}
/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/
hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}
/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/
abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}
/*
Remove the default font size and weight for headings.
*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
/*
Reset links to optimize for opt-in styling instead of opt-out.
*/
a {
  color: inherit;
  text-decoration: inherit;
}
/*
Add the correct font weight in Edge and Safari.
*/
b,
strong {
  font-weight: bolder;
}
/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}
/*
Add the correct font size in all browsers.
*/
small {
  font-size: 80%;
}
/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/
table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}
/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}
/*
Remove the inheritance of text transform in Edge and Firefox.
*/
button,
select {
  text-transform: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}
/*
Use the modern Firefox focus style for all focusable elements.
*/
:-moz-focusring {
  outline: auto;
}
/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/
:-moz-ui-invalid {
  box-shadow: none;
}
/*
Add the correct vertical alignment in Chrome and Firefox.
*/
progress {
  vertical-align: baseline;
}
/*
Correct the cursor style of increment and decrement buttons in Safari.
*/
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/
[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}
/*
Remove the inner padding in Chrome and Safari on macOS.
*/
::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}
/*
Add the correct display in Chrome and Safari.
*/
summary {
  display: list-item;
}
/*
Removes the default spacing and border for appropriate elements.
*/
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
/*
Prevent resizing textareas horizontally by default.
*/
textarea {
  resize: vertical;
}
/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/
input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}
/*
Set the default cursor for buttons.
*/
button,
[role="button"] {
  cursor: pointer;
}
/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}
/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}
/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/
img,
video {
  max-width: 100%;
  height: auto;
}
/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}
*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
.visible {
  visibility: visible;
}
.invisible {
  visibility: hidden;
}
.static {
  position: static;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.m-0 {
  margin: 0px;
}
.my-auto {
  margin-top: auto;
  margin-bottom: auto;
}
.mb-0 {
  margin-bottom: 0px;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.h-4 {
  height: 1rem;
}
.w-4 {
  width: 1rem;
}
.w-full {
  width: 100%;
}
.flex-initial {
  flex: 0 1 auto;
}
.flex-shrink {
  flex-shrink: 1;
}
.flex-grow {
  flex-grow: 1;
}
.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
.cursor-not-allowed {
  cursor: not-allowed;
}
.cursor-pointer {
  cursor: pointer;
}
.flex-row {
  flex-direction: row;
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-nowrap {
  flex-wrap: nowrap;
}
.items-center {
  align-items: center;
}
.items-stretch {
  align-items: stretch;
}
.justify-center {
  justify-content: center;
}
.gap-1 {
  gap: 0.25rem;
}
.gap-1\.5 {
  gap: 0.375rem;
}
.gap-2 {
  gap: 0.5rem;
}
.self-center {
  align-self: center;
}
.whitespace-normal {
  white-space: normal;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.border {
  border-width: 1px;
}
.bg-left {
  background-position: left;
}
.bg-right {
  background-position: right;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.font-medium {
  font-weight: 500;
}
.lowercase {
  text-transform: lowercase;
}
.capitalize {
  text-transform: capitalize;
}
.italic {
  font-style: italic;
}
.leading-none {
  line-height: 1;
}
.underline {
  text-decoration-line: underline;
}
.outline {
  outline-style: solid;
}
.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

:root {
	/* Color Pallette */
	--rich-black1: hsl(226, 27%, 5%);
	--rich-black2: hsl(226, 27%, 10%);
	--rich-black3: hsl(226, 27%, 13%);
	--rich-black4: hsl(226, 27%, 15%);

	--black4: hsl(0, 0%, 0%);
	--black3: hsl(0, 0%, 5%);
	--black2: hsl(0, 0%, 10%);
	--black1: hsl(0, 0%, 15%);

	--dark-gray4: hsl(0, 0%, 20%);
	--dark-gray3: hsl(0, 0%, 25%);
	--dark-gray2: hsl(0, 0%, 30%);
	--dark-gray1: hsl(0, 0%, 35%);

	--gray4: hsl(0, 0%, 40%);
	--gray3: hsl(0, 0%, 45%);
	--gray2: hsl(0, 0%, 50%);
	--gray1: hsl(0, 0%, 60%);

	--light-gray4: hsl(0, 0%, 65%);
	--light-gray3: hsl(0, 0%, 70%);
	--light-gray2: hsl(0, 0%, 75%);
	--light-gray1: hsl(0, 0%, 80%);

	--white1: hsl(0, 0%, 85%);
	--white2: hsl(0, 0%, 90%);
	--white3: hsl(0, 0%, 95%);
	--white4: hsl(0, 0%, 100%);

	--red1: hsl(2, 100%, 35%);
	--red2: hsl(2, 100%, 45%);
	--red3: hsl(2, 100%, 55%);
	--red4: hsl(2, 100%, 75%);

	--orange1: hsl(19, 100%, 35%);
	--orange2: hsl(19, 100%, 45%);
	--orange3: hsl(19, 100%, 55%);

	--orange-yellow1: hsl(35, 100%, 35%);
	--orange-yellow2: hsl(35, 100%, 45%);
	--orange-yellow3: hsl(35, 100%, 55%);

	--yellow1: hsl(60, 100%, 35%);
	--yellow2: hsl(60, 100%, 45%);
	--yellow3: hsl(60, 100%, 55%);

	--yellow-green1: hsl(84, 100%, 35%);
	--yellow-green2: hsl(84, 100%, 45%);
	--yellow-green3: hsl(84, 100%, 55%);

	--green1: hsl(113, 100%, 20%);
	--green2: hsl(113, 100%, 30%);
	--green3: hsl(113, 100%, 40%);
	--green4: hsl(113, 100%, 70%);

	--blue-green1: hsl(165, 100%, 35%);
	--blue-green2: hsl(165, 100%, 45%); /* THEME */
	--blue-green3: hsl(165, 100%, 55%);
	--blue-green4: hsl(165, 100%, 75%);

	--dark-teal1: hsl(179, 100%, 15%);
	--dark-teal2: hsl(179, 100%, 25%);

	--teal1: hsl(179, 100%, 35%);
	--teal2: hsl(179, 100%, 45%);
	--teal3: hsl(179, 100%, 55%);

	--blue1: hsl(218, 100%, 25%);
	--blue2: hsl(218, 100%, 35%);
	--blue3: hsl(218, 100%, 45%);
	--blue4: hsl(218, 100%, 55%);

	--blue-gray0: hsl(221, 39%, 11%); /* gray-900 */
	--blue-gray1: hsl(215, 28%, 17%); /* gray-800 */
	--blue-gray2: hsl(217, 19%, 27%); /* gray-700 */
	--blue-gray4: hsl(220, 10%, 46%); /* gray-500 */

	--indigo1: hsl(251, 74%, 30%);
	--indigo2: hsl(251, 74%, 40%); /* THEME */
	--indigo3: hsl(251, 74%, 50%);
	--indigo4: hsl(251, 80%, 60%);

	--purple1: hsl(290, 100%, 35%);
	--purple2: hsl(290, 100%, 45%);
	--purple3: hsl(290, 100%, 55%);

	--pink1: hsl(315, 100%, 35%);
	--pink2: hsl(315, 100%, 45%);
	--pink3: hsl(315, 100%, 55%);

	/* Buttons & Accordion Items */

	--color-swatch-button-border-color: hsl(220deg 13% 91%);

	--default-border-color: var(--black2);
	--default-bg-color: var(--white1);
	--default-text-color: var(--black2);
	--default-hover-border-color: var(--black4);
	--default-hover-bg-color: var(--white3);
	--default-hover-text-color: var(--black4);
	--default-border-radius: 6px;
	--button-size: 32px;
	--square-button-size: 28px;

	--black-bg-color: var(--white3);
	--black-hover-bg-color: var(--white4);
	--black-fg-color: var(--black2);
	--black-active-fg-color: var(--black4);
	--black-cw-bg-color: var(--white2);
	--black-cw-border-color: var(--white2);

	--red-hue: 335;
	--orange-hue: 39;
	--yellow-hue: 57;
	--green-hue: 140;
	--teal-hue: 175;
	--blue-hue: 210;
	--indigo-hue: 250;

	--background-sat: 100%;

	--background-light: 94%;
	--background-light-hover: calc(var(--background-light) + 5%);

	--fg-sat: 63%;
	--fg-sat-active: calc(var(--fg-sat) - 7%);

	--fg-light: 26%;
	--fg-light-active: calc(var(--fg-light) + 24%);
	--fg-light-disabled: calc(var(--fg-light) + 40%);

	--red-bg-color: hsl(var(--red-hue, 0) 100% 94%);
	--red-hover-bg-color: hsl(var(--red-hue, 0) 100% 99%);
	--red-fg-color: hsl(var(--red-hue, 0) 63% 26%);
	--red-active-fg-color: hsl(var(--red-hue, 0) 56% 50%);
	--red-cw-bg-color: var(--red-bg-color);
	--red-cw-border-color: var(--red-border-color);

	--orange-bg-color: hsl(var(--orange-hue, 39) 100% 94%);
	--orange-hover-bg-color: hsl(var(--orange-hue, 39) 100% 99%);
	--orange-fg-color: hsl(var(--orange-hue, 39) 63% 26%);
	--orange-active-fg-color: hsl(var(--orange-hue, 39) 56% 50%);
	--orange-cw-bg-color: var(--orange-bg-color);
	--orange-cw-border-color: var(--orange-border-color);

	--yellow-bg-color: hsl(var(--yellow-hue, 60) 100% 94%);
	--yellow-hover-bg-color: hsl(var(--yellow-hue, 60) 100% 99%);
	--yellow-fg-color: hsl(var(--yellow-hue, 60) 90% 30%);
	--yellow-active-fg-color: hsl(var(--yellow-hue, 60) 85% 50%);
	--yellow-cw-bg-color: var(--yellow-bg-color);

	--green-bg-color: hsl(var(--green-hue, 120) 100% 94%);
	--green-hover-bg-color: hsl(var(--green-hue, 120) 100% 99%);
	--green-fg-color: hsl(var(--green-hue, 120) 63% 26%);
	--green-active-fg-color: hsl(var(--green-hue, 120) 56% 50%);
	--green-cw-bg-color: var(--green-bg-color);

	--teal-bg-color: hsl(var(--teal-hue, 180) 100% 94%);
	--teal-hover-bg-color: hsl(var(--teal-hue, 180) 100% 99%);
	--teal-fg-color: hsl(var(--teal-hue, 180) 63% 26%);
	--teal-active-fg-color: hsl(var(--teal-hue, 180) 56% 50%);
	--teal-cw-bg-color: var(--teal-bg-color);

	--blue-bg-color: hsl(var(--blue-hue, 180) 100% 94%);
	--blue-hover-bg-color: hsl(var(--blue-hue, 180) 100% 99%);
	--blue-fg-color: hsl(var(--blue-hue, 180) 63% 26%);
	--blue-active-fg-color: hsl(var(--blue-hue, 180) 56% 50%);
	--blue-cw-bg-color: var(--blue-bg-color);

	--indigo-bg-color: hsl(var(--indigo-hue, 180) 100% 94%);
	--indigo-hover-bg-color: hsl(var(--indigo-hue, 180) 100% 99%);
	--indigo-fg-color: hsl(var(--indigo-hue, 180) 100% 25%);
	--indigo-active-fg-color: hsl(var(--indigo-hue, 180) 100% 50%);
	--indigo-cw-bg-color: var(--indigo-bg-color);
}

button {
	font-size: inherit;
}

/* Red */
.theme-button.red {
	background-color: var(--red-bg-color);
	border: 2px solid var(--red-fg-color);
	color: var(--red-fg-color);
	border-radius: var(--default-border-radius);
}

.theme-button.red:hover {
	background-color: var(--red-hover-bg-color);
}

.theme-button.red:active,
.theme-button.red:focus,
.theme-button.red:active:focus {
	background-color: var(--red-hover-bg-color);
	border: 2px solid var(--red-active-fg-color);
	color: var(--red-active-fg-color);
	outline: 1px solid transparent;
	outline-offset: 1px;
}

/* Orange */
.theme-button.orange {
	background-color: var(--orange-bg-color);
	border: 2px solid var(--orange-fg-color);
	color: var(--orange-fg-color);
	border-radius: var(--default-border-radius);
}

.theme-button.orange:hover {
	background-color: var(--orange-hover-bg-color);
}

.theme-button.orange:active,
.theme-button.orange:focus,
.theme-button.orange:active:focus {
	background-color: var(--orange-hover-bg-color);
	border: 2px solid var(--orange-active-fg-color);
	color: var(--orange-active-fg-color);
	outline: 1px solid transparent;
	outline-offset: 1px;
}

/* Yellow */
.theme-button.yellow {
	background-color: var(--yellow-bg-color);
	border: 2px solid var(--yellow-fg-color);
	color: var(--yellow-fg-color);
	border-radius: var(--default-border-radius);
}

.theme-button.yellow:hover {
	background-color: var(--yellow-hover-bg-color);
}

.theme-button.yellow:active,
.theme-button.yellow:focus,
.theme-button.yellow:active:focus {
	background-color: var(--yellow-hover-bg-color);
	border: 2px solid var(--yellow-active-fg-color);
	color: var(--yellow-active-fg-color);
	outline: 1px solid transparent;
	outline-offset: 1px;
}

/* Green */
.theme-button.green {
	background-color: var(--green-bg-color);
	border: 2px solid var(--green-fg-color);
	color: var(--green-fg-color);
	border-radius: var(--default-border-radius);
}

.theme-button.green:hover {
	background-color: var(--green-hover-bg-color);
}

.theme-button.green:active,
.theme-button.green:focus,
.theme-button.green:active:focus {
	background-color: var(--green-hover-bg-color);
	border: 2px solid var(--green-active-fg-color);
	color: var(--green-active-fg-color);
	outline: none;
}

/* Teal */
.theme-button.teal {
	background-color: var(--teal-bg-color);
	border: 2px solid var(--teal-fg-color);
	color: var(--teal-fg-color);
	border-radius: var(--default-border-radius);
}

.theme-button.teal:hover {
	background-color: var(--teal-hover-bg-color);
}

.theme-button.teal:active,
.theme-button.teal:focus,
.theme-button.teal:active:focus {
	background-color: var(--teal-hover-bg-color);
	border: 2px solid var(--teal-active-fg-color);
	color: var(--teal-active-fg-color);
	outline: none;
}

/* Blue */
.theme-button.blue {
	background-color: var(--blue-bg-color);
	border: 2px solid var(--blue-fg-color);
	color: var(--blue-fg-color);
	border-radius: var(--default-border-radius);
}

.theme-button.blue:hover {
	background-color: var(--blue-hover-bg-color);
}

.theme-button.blue:active,
.theme-button.blue:focus,
.theme-button.blue:active:focus {
	background-color: var(--blue-hover-bg-color);
	border: 2px solid var(--blue-active-fg-color);
	color: var(--blue-active-fg-color);
	outline: none;
}

/* Indigo */
.theme-button.indigo {
	background-color: var(--indigo-bg-color);
	border: 2px solid var(--indigo-fg-color);
	color: var(--indigo-fg-color);
	border-radius: var(--default-border-radius);
}

.theme-button.indigo:hover {
	background-color: var(--indigo-hover-bg-color);
}

.theme-button.indigo:active,
.theme-button.indigo:focus,
.theme-button.indigo:active:focus {
	background-color: var(--indigo-hover-bg-color);
	border: 2px solid var(--indigo-active-fg-color);
	color: var(--indigo-active-fg-color);
	outline: none;
}

.transition-color {
	transition-property: color, background-color, border-color, transform;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}
